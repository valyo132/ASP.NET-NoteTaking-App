@using NoteTaking.Web.Common;
@using NoteTaking.Web.ViewModels;
@model List<DetailsNoteViewModel>
@{
    ViewData["Title"] = "All";
}

<partial name="_Notifications" />

<div class="sidebar">
    <h1>Logo here</h1>
    <hr>
    <form>
        <button class="create-note" asp-action="HomePage" asp-controller="Home">Add note</button>
        <br />
        <div class="side-buttons-grid">
            <button class="sidebar-button" asp-action="Index" asp-controller="Home"><i class="bi bi-house-door"></i> Home</button>
            <button class="sidebar-button" asp-action="Index" asp-controller="User"><i class="bi bi-house-door"></i> Profile</button>
        </div>
    </form>
</div>

<br />
<div class="all-notes-system">
    <div class="note-system-top">
        <form style="display:inline-block">
            <a type="submit" class="undo-button" asp-action="HomePage" asp-controller="Home"><i class="bi bi-arrow-left"></i></a>
        </form>
        <form method="get" asp-action="All" asp-controller="Home" style="display:inline-block">
            <div class="custom-select">
                <select id="sortOption" name="sortOption" onchange="this.form.submit()">
                    <option value="None">Select sort</option>
                    <option value="Latest">Latest</option>
                    <option value="Oldest">Oldest</option>
                    <option value="Title">Title</option>
                </select>
                <label>Sorted by: @SelectSortBoxInput._sortOption</label>
            </div>
        </form>
        <form asp-action="Search" asp-controller="Home" style="display:inline-block; margin-left: auto;">
            <div>
                <input type="text" class="search-box" placeholder="search..." name="value" required />
                <button id="search-button" type="submit" value="Search" class="search-button"><i class="bi bi-search"></i></button>
            </div>
        </form>
        <form asp-action="Search" asp-controller="Home" style="display:inline-block;">
            <button id="show-all-button" type="submit" name="flag" value="Show all" class="show-all-button" style="margin-left: 5px;"><i class="bi bi-eye"></i></button>
        </form>

    </div>
    <br />
    @if (Model.Any())
    {
        @if (Model.Any(n => n.isPinned))
        {
            {
                var pinnedNotes = Model.Where(n => n.isPinned).ToList();

                <h1><i class="bi bi-journal-bookmark-fill"></i> Pinned notes</h1>
                <div class="allnotes-grid">
                    @for (int i = 0; i < pinnedNotes.Count(); i++)
                    {
                        <div class="note">
                            <div>
                                <p class="title">@pinnedNotes[i].Title</p>
                                <div class="dropdown" style="display:inline-block;">
                                    <button class="dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="bi bi-three-dots-vertical"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="@Url.Action("Delete", "Home", new { id = pinnedNotes[i].Id })"><i class="bi bi-trash"></i> Delete</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Edit", "Home", new { id = pinnedNotes[i].Id })"><i class="bi bi-pen"></i> Edit</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Details", "Home", new { id = pinnedNotes[i].Id })"><i class="bi bi-info-circle"></i> Details</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Unpinn", "Home", new { id = pinnedNotes[i].Id })"><i class="bi bi-pin-angle"></i> Unpinn</a></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="content">
                                <p class="text-secondary lh-sm"> @Html.Raw(pinnedNotes[i].Text)</p>
                            </div>
                            <p class="date">@pinnedNotes[i].Date</p>
                        </div>
                    }
                </div>
            }
        }

        @if (Model.Any(n => !n.isPinned))
        {
            {
                var notPinnedNotes = Model.Where(n => !n.isPinned).ToList();
                <h1><i class="bi bi-journal-bookmark"></i> Quick notes</h1>
                <div class="allnotes-grid">
                    @for (int i = 0; i < notPinnedNotes.Count(); i++)
                    {
                        <div class="note">
                            <div>
                                <p class="title">@notPinnedNotes[i].Title</p>
                                <div class="dropdown" style="display:inline-block;">
                                    <button class="dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="bi bi-three-dots-vertical"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="@Url.Action("Delete", "Home", new { id = notPinnedNotes[i].Id })"><i class="bi bi-trash"></i> Delete</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Edit", "Home", new { id = notPinnedNotes[i].Id })"><i class="bi bi-pen"></i> Edit</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Details", "Home", new { id = notPinnedNotes[i].Id })"><i class="bi bi-info-circle"></i> Details</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Pinn", "Home", new { id = notPinnedNotes[i].Id })"><i class="bi bi-pin-angle"></i> Pinn</a></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="content">
                                <p class="text-secondary lh-sm"> @Html.Raw(notPinnedNotes[i].Text)</p>
                            </div>
                            <p class="date">@notPinnedNotes[i].Date</p>
                        </div>
                    }
                </div>
            }
        }
    }
    else
    {
        <h2>Oops... You don't have any notes</h2>
    }
    <form>
        <div>
            <input type="submit" value="View deleted notes" class="btn btn-info" asp-action="AllDeletedNotes" asp-controller="Home" />
        </div>
    </form>
</div>

<script>
    console.log('HI');
    const searchButton = document.getElementById('search-button');
    const showAllButton = document.getElementById('show-all-button');
    searchButton.addEventListener('click', () => {
        setTimeout(() => {
            console.log('OK');
            showAllButton.style.display = 'block';
        }, 2000);
    });
</script>
